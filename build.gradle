plugins {
    id "fabric-loom" version "1.7-SNAPSHOT"
    id "maven-publish"
}

base { archivesName = mod_id }
version = mod_version

repositories {
    maven {
        url "https://api.modrinth.com/maven"
        content { includeGroup "maven.modrinth" }
    }
    maven {
        url 'https://maven.isxander.dev/releases'
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings "net.fabricmc:yarn:${minecraft_version}+${yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${fabric_loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}+${minecraft_version}"
    modImplementation "dev.isxander:yet-another-config-lib:${yacl_version}+${minecraft_version}-fabric"

    include modImplementation("com.moulberry:mixinconstraints:1.0.0")

    modLocalRuntime modImplementation("maven.modrinth:modmenu:${modmenu_version}")
    modLocalRuntime "maven.modrinth:sodium:mc${minecraft_version}-${sodium_version}"
}

loom {
    accessWidenerPath = file("src/main/resources/${mod_id}.accesswidener")
    splitEnvironmentSourceSets()
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }
    mixin {
        useLegacyMixinAp = false
    }
}

processResources {
    filesMatching("fabric.mod.json") {
        expand project.properties
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

afterEvaluate {
    loom.runs.configureEach {
        vmArg "-javaagent:${ configurations.compileClasspath.find { it.name.contains("sponge-mixin") } }"
        property "mixin.debug.export=true"
    }
}